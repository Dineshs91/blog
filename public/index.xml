<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My thoughts and adventures</title>
    <link>http://dineshs91.github.io/blog/</link>
    <description>Recent content on My thoughts and adventures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyleft; Feel free to steal</copyright>
    <lastBuildDate>Wed, 01 Jun 2016 22:40:27 +0530</lastBuildDate>
    <atom:link href="http://dineshs91.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What if you lose your data</title>
      <link>http://dineshs91.github.io/blog/post/data/</link>
      <pubDate>Wed, 01 Jun 2016 22:40:27 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/data/</guid>
      <description>&lt;p&gt;You have been working day in and day out. All your important documents are there in your hard disk.
For most of us, ctrl + s (Save) is enough to save us from the trouble of having to deal with the loss of
data. That&amp;rsquo;s bad, because you can still get into trouble. You might ask how, then picture this, what
if your hard disk gets corrupted ? What if you delete your files accidently ? What if you lose your laptop.&lt;/p&gt;

&lt;p&gt;The question we have to ask ourselves is, are we prepared for the above scenarios ? If the answer is no, now
is the time to change that.&lt;/p&gt;

&lt;p&gt;I am going to explain the setup I&amp;rsquo;ve done in my laptop (Mac os x El Captain).&lt;/p&gt;

&lt;p&gt;Its a 2 step process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sync with any of the cloud services like Google Drive or Dropbox. I use &lt;a href=&#34;https://github.com/emcrisostomo/fswatch&#34;&gt;fswatch&lt;/a&gt;
to watch for changes in the directories I want to sync and use &lt;a href=&#34;https://gist.github.com/Dineshs91/ea1cb572eac2fbc28dff459346456e9c#file-sync-sh&#34;&gt;sync.sh&lt;/a&gt;
script to sync the directories with Google Drive. fswatch notifies if there are any changes in the
directory and I use rsync to keep the directories in sync. This comes in very handy.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rsync -a --delete &amp;quot;$my_dir&amp;quot; &amp;quot;$dest_dir&amp;quot;

-a (Archive and sync recursively.)
--delete (Delete files that are removed from the directories being watched.)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This frees from manually copying all your documents to Google Drive directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create compressed tar files and put them in an external storage. This step is a manual one.
You have to run the script whenever you want to take backup. You could use cron service though if you like to
automate the process. This is the script that I use &lt;a href=&#34;https://gist.github.com/Dineshs91/ea1cb572eac2fbc28dff459346456e9c#file-backup-sh&#34;&gt;backup.sh&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;**Backup**
tar -zcvf &amp;quot;$ext_hard_disk_dir&amp;quot; --directory / --exclude=&#39;node_modules&#39; &amp;quot;$my_dir&amp;quot;

$ext_hard_disk_dir is the destination directory where the archives will be stored.
$my_dir is the directory which will be archived.

-z (Specify this option, if you want to compress the backup data.)
-v (Verbose)

**Restore**
Test the archive.
tar -ztvf /archive/full-backup-02-March-2016.tar.gz

tar -zxvf /archive/full-backup-02-March-2016.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tldp.org/LDP/lame/LAME/linux-admin-made-easy/backup-and-restore.html&#34;&gt;linux-admin-made-easy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tldp.org/LDP/sag/html/backups.html&#34;&gt;Importance of backups&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why you should love your job</title>
      <link>http://dineshs91.github.io/blog/post/love_job/</link>
      <pubDate>Mon, 14 Mar 2016 20:50:57 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/love_job/</guid>
      <description>&lt;p&gt;Work takes up a significant part of our lives. So shouldn&amp;rsquo;t we be loving our job ?&lt;/p&gt;

&lt;p&gt;I would start this post by quoting Vivekananda&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any fool can do what he loves, but only great men can love anything they work on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We all need some kind of a job to feed ourselves and our closed one&amp;rsquo;s. So we find a job
that we don&amp;rsquo;t love, but we take it. This leads to a highly unsatisfied life.
&lt;strong&gt;You are not only affecting your life, but you are affecting other&amp;rsquo;s life
too&lt;/strong&gt;. You can try to find what you really love and go work on it. This
is relatively easy, something that is widely believed in the western world. Most of the inspirational
talks I&amp;rsquo;ve seen, speak about following your passion etc etc.&lt;/p&gt;

&lt;p&gt;This is where Indian spirituality shines. The spiritual giants have said love your work, it doesn&amp;rsquo;t
matter whether you are passionate about it or not. I strongly believe in this idea. This free&amp;rsquo;s you
further from the attachment to work.&lt;/p&gt;

&lt;p&gt;The goal of life is this, explore, experience and live every moment with happiness.
Life is a gift, the best gift one can get.
Say, if you get fired from the job that you love so much, its not just the job that you are losing,
but you are losing your happiness too. The mantra for limitless happiness is &lt;strong&gt;love what you do&lt;/strong&gt;.
If you are able to implement this perfectly, you will be happy unconditionally, because your happiness
is not tied to any specific kind of work. You would have perfected the art of being happy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Awesome collection of technology podcasts, videos and articles</title>
      <link>http://dineshs91.github.io/blog/post/awesome_collections/</link>
      <pubDate>Sat, 20 Feb 2016 21:33:14 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/awesome_collections/</guid>
      <description>

&lt;p&gt;Here&amp;rsquo;s a list of awesome articles, podcasts and youtube talks.&lt;/p&gt;

&lt;h1 id=&#34;podcasts:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;Podcasts&lt;/h1&gt;

&lt;h4 id=&#34;functional-geekery-eric-smith-https-www-functionalgeekery-com-episode-37-eric-smith:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;https://www.functionalgeekery.com/episode-37-eric-smith/&#34;&gt;Functional Geekery - Eric Smith&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;OOP was developed on false assumptions.&lt;/p&gt;

&lt;p&gt;New beginner&amp;rsquo;s to programming should not start with imperative programming.&lt;/p&gt;

&lt;h4 id=&#34;functional-geekery-johnyy-winn-https-www-functionalgeekery-com-episode-34-johnny-winn:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;https://www.functionalgeekery.com/episode-34-johnny-winn/&#34;&gt;Functional Geekery - Johnyy Winn&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Tweet, blog about what you do.&lt;/p&gt;

&lt;p&gt;The best way to learn a new language (Not a 1st one) is to rewrite a library you have known in a different language in
the new language.&lt;/p&gt;

&lt;h1 id=&#34;blogs:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;Blogs&lt;/h1&gt;

&lt;h4 id=&#34;programming-and-human-factors-jeff-atwood-blog-codinghorror-com:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;blog.codinghorror.com&#34;&gt;Programming and human factors - Jeff Atwood&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Has a huge collection of posts focussing on the usability side of softwares and talks about people.
Jeff Atwood is the cofounder of &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;StackOverflow&lt;/a&gt; and &lt;a href=&#34;http://discourse.org/&#34;&gt;Discourse&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;brain-food-for-hackers-gustavo-duarte-http-duartes-org-gustavo-blog:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://duartes.org/gustavo/blog/&#34;&gt;Brain food for hackers - Gustavo Duarte&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;An excellent systems/hardware blog. If you are a kernel hacker or just curious about internal workings, you
will love this blog.&lt;/p&gt;

&lt;p&gt;Very detailed, low level explanation with illustrations.&lt;/p&gt;

&lt;h4 id=&#34;brendan-gregg-senior-performance-architect-http-www-brendangregg-com:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://www.brendangregg.com/&#34;&gt;Brendan Gregg - Senior performance architect&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;He is one of the leading experts on DTrace and author of books on DTrace and systems performance.
Checkout his &lt;a href=&#34;http://www.brendangregg.com/blog/index.html&#34;&gt;blog&lt;/a&gt; posts on Linux performance.&lt;/p&gt;

&lt;h4 id=&#34;paul-graham-cofounder-of-ycombinator-http-www-paulgraham-com-articles-html:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://www.paulgraham.com/articles.html&#34;&gt;Paul Graham - Cofounder of YCombinator&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Known for his work on Lisp and for co-founding Y Combinator seed capital firm.
Good collection of articles, mostly on startups.&lt;/p&gt;

&lt;h1 id=&#34;articles-papers-and-books:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;Articles, papers and books&lt;/h1&gt;

&lt;h4 id=&#34;peter-landin-the-next-700-programming-languages-http-www-cs-cmu-edu-crary-819-f09-landin66-pdf:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://www.cs.cmu.edu/~crary/819-f09/Landin66.pdf&#34;&gt;Peter landin - The next 700 programming languages&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Mentioned by Eric Smith in Functional Geekery podcast.&lt;/p&gt;

&lt;h4 id=&#34;how-to-design-programs-http-www-htdp-org:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://www.htdp.org/&#34;&gt;How to design programs&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Mentioned by Eric Smith in Functional Geekery podcast.&lt;/p&gt;

&lt;h4 id=&#34;john-backus-can-programming-be-liberated-from-the-von-neumann-style-http-worrydream-com-refs-backus-canprogrammingbeliberated-pdf:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://worrydream.com/refs/Backus-CanProgrammingBeLiberated.pdf&#34;&gt;John Backus - Can programming be liberated from the Von Neumann Style&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id=&#34;peter-norvig-teach-yourself-programming-in-ten-years-http-norvig-com-21-days-html:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://norvig.com/21-days.html&#34;&gt;Peter Norvig - Teach Yourself Programming in Ten Years&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;In this article, Peter Norvig talks about, why everyone is in such a rush ? and how 10 years can help to become a great programmer.&lt;/p&gt;

&lt;h4 id=&#34;eric-s-raymond-how-to-become-a-hacker-http-www-catb-org-esr-faqs-hacker-howto-html:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://www.catb.org/esr/faqs/hacker-howto.html&#34;&gt;Eric S Raymond - How to become a hacker&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This is an excellent book, which clarifies the meaning of the word &amp;lsquo;Hacker&amp;rsquo; and how you can become one.&lt;/p&gt;

&lt;h4 id=&#34;alan-j-perlis-epigrams-on-programming-http-pu-inf-uni-tuebingen-de-users-klaeren-epigrams-html:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;http://pu.inf.uni-tuebingen.de/users/klaeren/epigrams.html&#34;&gt;Alan J.Perlis - Epigrams on programming&lt;/a&gt;&lt;/h4&gt;

&lt;h1 id=&#34;videos:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;Videos&lt;/h1&gt;

&lt;h4 id=&#34;philip-roberts-what-the-heck-is-event-loop-https-www-youtube-com-watch-v-8aghzqkofbq:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8aGhZQkoFbQ&#34;&gt;Philip Roberts - What the heck is event loop&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Must watch video if you are a js dev.&lt;/p&gt;

&lt;h4 id=&#34;linus-torvalds-git-version-control-system-https-www-youtube-com-watch-v-4xpnkhjaok8:0b6277771390054bd4f81dbe6f21b3d1&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4XpnKHJAok8&#34;&gt;Linus Torvalds - GIT version control system&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;In this video Linus explains the motivation behind GIT and how it is different from existing systems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tars my first bot</title>
      <link>http://dineshs91.github.io/blog/post/tars_bot/</link>
      <pubDate>Mon, 18 Jan 2016 21:26:25 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/tars_bot/</guid>
      <description>&lt;p&gt;In one of my earlier &lt;a href=&#34;http://dineshs91.github.io/blog/post/greenkeeper/&#34;&gt;posts&lt;/a&gt; I had written about &lt;a href=&#34;http://greenkeeper.io/&#34;&gt;greenkeeper&lt;/a&gt; the app that automates dependency updates. I will start with a brief explanation about it, it will send you a pull request(PR) everytime
there is a newer version of your depenedencies available, that are specified in package.json. Then you can decide to merge the PR or not.
That&amp;rsquo;s basically what it does. This is just one half of the automation right. You have to manually merge those PR&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;I thought I could automate that part too. This is were &lt;a href=&#34;https://github.com/Dineshs91/tars&#34;&gt;tars&lt;/a&gt; comes into picture. Yes, the name was
inspired from Interstellar. We all love tars right!. I wrote this bot to help me with my &lt;a href=&#34;https://github.com/Dineshs91/devlog&#34;&gt;devlog&lt;/a&gt;
project.&lt;/p&gt;

&lt;p&gt;It follows a 3 step process. Check, merge and delete. First step, fetch all open PR&amp;rsquo;s and see which one&amp;rsquo;s are opened by GREENKEEPER_BOT.
We only care about the one&amp;rsquo;s opened by it. Then we check the CI status of the PR, whether the tests are passing
or failing. In the next step, if the tests are passing, tars merge&amp;rsquo;s the PR. If PR cannot be merged automatically, it creates a comment with
a message saying &lt;em&gt;This pull request cannot be merged by me&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After successful merging of PR, it deletes the corresponding branch. Greenkeeper opens a branch with the PR. So after merging,
the branch is no longer needed. Tars removes the branch once the PR is merged succesfully into master branch.&lt;/p&gt;

&lt;p&gt;The next part is to, set up the program to run as a job. You can schedule a cron job to make the process completely automatic.
You can use &lt;a href=&#34;http://crontab.guru/&#34;&gt;crontab.guru&lt;/a&gt; which is a simple editor for cron schedule expressions.&lt;/p&gt;

&lt;p&gt;Bots are fascinating right, it&amp;rsquo;s an opportunity for us to just sit back, and watch things happen. Why not write your own bot ?
I am sure it will be fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Never forget to wish your close one&#39;s again.</title>
      <link>http://dineshs91.github.io/blog/post/birthday_wisher/</link>
      <pubDate>Sun, 06 Dec 2015 23:34:13 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/birthday_wisher/</guid>
      <description>&lt;p&gt;It was a rainy weekend at my place. I was thinking how to make best use of that time and something crossed
my mind. What if a bot, can send birthday wishes to my friends on Facebook ? It would save me of all the regrets I have
had in the past. I said to myself &lt;strong&gt;challenge accepted&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I have done a similar kind of project in the past at work, where we had to get the gift card balances of 5 gift cards.
I used python urllib and re(regex) to accomplish the task. Hit the url with urllib2 and parse the balances from the
response using regex. But this time, I wanted to try a different approach. I guessed that the previous approach wouldn&amp;rsquo;t
work so well. So, how do I do this ?&lt;/p&gt;

&lt;p&gt;I had some experience with &lt;a href=&#34;http://www.seleniumhq.org/&#34;&gt;selenium&lt;/a&gt; (It is for automating web applications for testing purposes), so I wanted to give it a try.
Java ? Wait, who am I kidding ? No way. I went with &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; (Seemed better, lot better). The thought of opening an IDE, waved me off of java.
So I bootstrapped a small code in node.js. I had to choose between &lt;a href=&#34;https://angular.github.io/protractor/#/&#34;&gt;protractor&lt;/a&gt;
and &lt;a href=&#34;http://webdriver.io/&#34;&gt;webdriverio&lt;/a&gt;. I had used protractor in my &lt;a href=&#34;https://github.com/dineshs91/devlog&#34;&gt;devlog&lt;/a&gt; project,
but it works only with angular (You can make it work for non-angular projects too, but with some tweaks). So I decided to
take webdriverio for a spin and it did the job quite well.&lt;/p&gt;

&lt;p&gt;Having chosen the framework, it was time to write the code. One weird thing I noticed in facebook is that even the ID
attribute of an element was not consistent. It kept changing, so you can&amp;rsquo;t use them in selectors. I completed the code
in 10-20 Lines. Selenium invokes a browser, does the actions specified in the code and quits. Now we don&amp;rsquo;t want a browser
show up on the screen, when the bot works right. This is where &lt;a href=&#34;http://phantomjs.org/&#34;&gt;phantomjs&lt;/a&gt; shines. It is a headless
browser for testing purposes.&lt;/p&gt;

&lt;p&gt;There was one challenge I faced, which was synchronising the 2 steps. step 1 start the selenium standalone server and step 2
execute the webdriverio code. I solved this problem using event emitter. So when selenium server starts a &lt;code&gt;start&lt;/code&gt; event
is emitted and there is a listener, which listens to this event and starts the webdriverio execution. Having solved the main
problem, I did some final refinements and that&amp;rsquo;s it. The code is ready. Rock and roll.&lt;/p&gt;

&lt;p&gt;You can find the source &lt;a href=&#34;https://github.com/Dineshs91/fb-birthday-wisher&#34;&gt;here&lt;/a&gt;. And I forgot to mention that, the program
randomly chooses a wish from an array of wishes in the code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Projects</title>
      <link>http://dineshs91.github.io/blog/post/projects/</link>
      <pubDate>Sat, 07 Nov 2015 14:08:48 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/projects/</guid>
      <description>

&lt;p&gt;Projects I&amp;rsquo;ve worked on in open source world.&lt;/p&gt;

&lt;h2 id=&#34;own-projects:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;Own projects&lt;/h2&gt;

&lt;h4 id=&#34;devlog-https-github-com-dineshs91-devlog:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/Dineshs91/devlog&#34;&gt;Devlog&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Devlog is a cross-platform desktop application which helps you keep track of your notes and ideas in a
simple yet intutive way.&lt;/p&gt;

&lt;h4 id=&#34;tars-https-github-com-dineshs91-tars:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/Dineshs91/tars&#34;&gt;Tars&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Tars is an automated integration bot, which merges the pull request raised by
&lt;a href=&#34;https://github.com/greenkeeperio-bot&#34;&gt;greenkeeper-io bot&lt;/a&gt;.
This is helpful to keep the project dependencies upto date. It merges the PR if and only if the tests
pass.&lt;/p&gt;

&lt;h4 id=&#34;fb-birthday-wisher-https-github-com-dineshs91-fb-birthday-wisher:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/Dineshs91/fb-birthday-wisher&#34;&gt;fb-birthday-wisher&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Send your birthday wishes, to your friends on Facebook automatically, so you never have to miss wishing your best one&amp;rsquo;s.
It makes use of selenium via webdriverio, to automate the process. Phantomjs is the hero here, which is a headless browser.&lt;/p&gt;

&lt;h4 id=&#34;look-up-https-github-com-dineshs91-look-up:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/Dineshs91/look-up&#34;&gt;Look-up&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Look-up is a python command line app to know the meaning of a word (Dictionary).&lt;/p&gt;

&lt;h4 id=&#34;scrapy-api-https-github-com-dineshs91-scrapy-api:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/Dineshs91/scrapy-api&#34;&gt;Scrapy-api&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Scrapy api leverages &lt;a href=&#34;https://github.com/scrapy/scrapy&#34;&gt;scrapy&lt;/a&gt; to create unofficial api&amp;rsquo;s for
websites. It&amp;rsquo;s written in python.&lt;/p&gt;

&lt;h2 id=&#34;contributed-projects:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;Contributed projects&lt;/h2&gt;

&lt;h4 id=&#34;youtube-dl-https-github-com-rg3-youtube-dl:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/rg3/youtube-dl&#34;&gt;Youtube-dl&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Youtube-dl is a video extractor and supports upto 250+ sites. Also supports downloading thumbnails,
subtitles, audio etc.&lt;/p&gt;

&lt;p&gt;Wrote an extractor for rte.ie site, to download videos.
Fixed a small bunch of bugs.&lt;/p&gt;

&lt;h4 id=&#34;scrapy-https-github-com-scrapy-scrapy:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/scrapy/scrapy&#34;&gt;Scrapy&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Scrapy is a web scraping library written in python.&lt;/p&gt;

&lt;p&gt;Added zsh auto command completion.&lt;/p&gt;

&lt;h4 id=&#34;wappalyzer-https-github-com-aliasio-wappalyzer:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/AliasIO/Wappalyzer&#34;&gt;Wappalyzer&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Added code for detecting &lt;a href=&#34;https://github.com/Semantic-Org/Semantic-UI&#34;&gt;Semantic-ui&lt;/a&gt; to wappalyzer browser
plugin for uncovering technologies used in websites.&lt;/p&gt;

&lt;h4 id=&#34;cargo-https-github-com-rust-lang-cargo:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;&lt;a href=&#34;https://github.com/rust-lang/cargo&#34;&gt;Cargo&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Cargo is &lt;a href=&#34;https://github.com/rust-lang/rust&#34;&gt;Rust&amp;rsquo;s&lt;/a&gt; package manager.Rust is a fast systems programming
language that guarantees memory safety and offers painless concurrency.&lt;/p&gt;

&lt;p&gt;Added code to make lib name optional in toml file.
Added uninstall target in makefile.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Registering and uploading python package to pip</title>
      <link>http://dineshs91.github.io/blog/post/pip/</link>
      <pubDate>Sun, 11 Oct 2015 10:36:21 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/pip/</guid>
      <description>

&lt;p&gt;Packaging and distributing in python is a bit difficult. &lt;a href=&#34;https://pypi.python.org/&#34;&gt;PyPI&lt;/a&gt;, the python package index is the most common
one. I will explain step by step, how to upload your package to PyPI.&lt;/p&gt;

&lt;h2 id=&#34;setup-file:925515232cb73ab116c2825cf20513b1&#34;&gt;Setup file&lt;/h2&gt;

&lt;p&gt;The first thing is to create a setup.py file in the root of your project.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from setuptools import setup

setup(
    name = &amp;quot;project&amp;quot;,
    version = &amp;quot;0.1.0&amp;quot;,
    author = &amp;quot;author name&amp;quot;,
    author_email = &amp;quot;author@gmail.com&amp;quot;,
    description = (&amp;quot;Description of the package&amp;quot;),
    license = &amp;quot;MIT&amp;quot;,
    keywords = &amp;quot;keywords&amp;quot;,
    url = &amp;quot;http://url-of-project/&amp;quot;,
    packages = [&#39;packages&#39;],
    long_description = &amp;quot;Provide a detailed explanation of your &amp;quot;\
                       &amp;quot;project and how it can be used&amp;quot;,
    install_requires = [
        &amp;quot;click&amp;gt;=5.0&amp;quot;,
        &amp;quot;pygments==2.0.2&amp;quot;
    ],
    entry_points = {
        &#39;console_scripts&#39;: [
            &#39;project=project:main&#39;
        ],
    }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a template for setup.py. Just fill in your information like name, email, project description etc.
Mention all your project dependencies in &lt;code&gt;install_requires&lt;/code&gt; section. You also have to provide the entry_point
for your program. You can do that with &lt;code&gt;entry_points&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;project=project.main&lt;/code&gt;
project is the name of the binary. Project in &lt;code&gt;project.main&lt;/code&gt; is the package name and &lt;code&gt;main&lt;/code&gt; is the name of
the function to be called. So this will be the first function, that python calls.&lt;/p&gt;

&lt;h2 id=&#34;test-the-package-locally:925515232cb73ab116c2825cf20513b1&#34;&gt;Test the package locally&lt;/h2&gt;

&lt;p&gt;Once you are done with setup, we can generate the distributable file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ python setup.py sdist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command generates the distributable zip file inside &lt;code&gt;dist/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Extract the zip file, that is present in dist directory and cd into it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command installs your package locally. You can do this to verify if your setup is correct or not. If setup.py is
correct then the local install works fine.&lt;/p&gt;

&lt;h2 id=&#34;register-with-pypi:925515232cb73ab116c2825cf20513b1&#34;&gt;Register with PyPI&lt;/h2&gt;

&lt;p&gt;To upload packages to PyPI, you have to be registered with them. Its simple, you can do it from the command line itself.
Run the below command.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ python setup.py register&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here you can register as a new user. Provide your username, email and password and you&amp;rsquo;re done. In this step, you will
register yourself and not the package.&lt;/p&gt;

&lt;p&gt;Next step is to register your package.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ python setup.py register&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This time, choose login as existing user. If you get Server response (200): OK, then your project is registered succesfully.
Sometimes you might get the below error.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Registering lookup to http://pypi.python.org/pypi
Server response (403): You are not allowed to store &#39;project&#39; package information&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check if there is any existing project in PyPI with the same name as your project.
If yes, then you have to rename your project. After making the necessary changes register again (Run the command again).&lt;/p&gt;

&lt;h2 id=&#34;upload:925515232cb73ab116c2825cf20513b1&#34;&gt;Upload&lt;/h2&gt;

&lt;p&gt;Before running the upload command, you have to create &lt;code&gt;~/.pypirc&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;Contents of .pypirc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[server-login]
username:username
password:password&amp;lt;Plain text&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After creating the file, run the following command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ python setup.py sdist upload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will generate the distributable and uploads it to PyPI. If everything goes well you will see
&lt;code&gt;Server response (200): OK&lt;/code&gt; on your terminal.&lt;/p&gt;

&lt;p&gt;You have successfully uploaded your package to PyPI. Next time you can skip the user registration. No need to register
again, you can use your existing credentials.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Greenkeeper, meet the dependency genie</title>
      <link>http://dineshs91.github.io/blog/post/greenkeeper/</link>
      <pubDate>Fri, 09 Oct 2015 18:50:37 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/greenkeeper/</guid>
      <description>&lt;p&gt;Meet &lt;a href=&#34;http://greenkeeper.io/&#34;&gt;greenkeeper&lt;/a&gt;, the app that automates dependency updates and notifies you of build failures
so you can spend your development time actually making things.&lt;/p&gt;

&lt;p&gt;So, what exactly is greenkeeper ?&lt;/p&gt;

&lt;p&gt;If you have worked on any node.js project, then you probably know how painful it is, to manage all the dependencies.
This is the problem that greenkeeper is trying to address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Setting up greenkeeper is very simple. Just a few commands and clicks, and you are good to go.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ npm install -g greenkeeper&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ greenkeeper login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dineshs91.github.io/blog/images/greenkeeper/login.png&#34; alt=&#34;login&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This will open a browser and asks you to log in to GitHub. By the way, that&amp;rsquo;s a cool logo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dineshs91.github.io/blog/images/greenkeeper/github.png&#34; alt=&#34;github&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once you authorize the application, you will get the successful message in terminal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dineshs91.github.io/blog/images/greenkeeper/done.png&#34; alt=&#34;done&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ greenkeeper enable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will read all your repositories and enables the applications which are supported by it.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it. It&amp;rsquo;s easy right. Just 3 steps and we are all set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let the magic begin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After you have done the setup, sit back and wait for the PR from greenkeeper.&lt;/p&gt;

&lt;p&gt;The PR looks like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dineshs91.github.io/blog/images/greenkeeper/pull_request.png&#34; alt=&#34;pull request&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can review the PR and take the necessary action. The awesome thing is if you are using travis-ci, then
the PR is run on it, so you can know if it breaks anything. Cool right.&lt;/p&gt;

&lt;p&gt;It really helps developers in managing their dependencies. This is a must if you are developing node.js apps.
They have both free and paid plans. Pay a visit to their &lt;a href=&#34;http://greenkeeper.io/&#34;&gt;site&lt;/a&gt; to know more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problem with using angular&#39;s $index in ng-repeat</title>
      <link>http://dineshs91.github.io/blog/post/angular_index/</link>
      <pubDate>Tue, 29 Sep 2015 23:30:32 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/angular_index/</guid>
      <description>&lt;p&gt;ng-repeat is used to iterate through objects and act upon them individually. $index gives the index of an
object in the array.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div ng-repeat=&amp;quot;log in logs&amp;quot;&amp;gt;
    &amp;lt;span class=&amp;quot;remove&amp;quot; ng-click=&amp;quot;remove($index)&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;


$scope.remove = function($index) {
    // Code for removing log
    remove($scope.logs[$index]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code snippet, works fine for most of the scenarios. But the moment, we start to use orderBy or filter in ng-repeat,
things start to break. Why does it break ?&lt;/p&gt;

&lt;p&gt;It breaks because $index gives the index from the origin array &lt;code&gt;logs&lt;/code&gt;. It doesn&amp;rsquo;t work on filtered or ordered logs, but
works on the original array.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;logs = [
    &#39;log1&#39;: {
        timestamp: 123456
    },
    &#39;log2&#39;: {
        timestamp: 123499
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If an orderBy is enforced (Descending order), this is what we get after orderBy&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;logs = [
    &#39;log2&#39;: {
        timestamp: 123499
    },
    &#39;log1&#39;: {
        timestamp: 123456
    },
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you use $index to find the index of &lt;strong&gt;log2&lt;/strong&gt;, it gives 0 (Indexing starts from 0) whereas it should have been 1,
because 1 is the index of &lt;strong&gt;log2&lt;/strong&gt; in the original logs array. If you use &lt;code&gt;$scope.logs[$index]&lt;/code&gt; it will select &lt;strong&gt;log1&lt;/strong&gt; not &lt;strong&gt;log2&lt;/strong&gt;.
But you will be under the impression, that you have selected &lt;strong&gt;log2&lt;/strong&gt;.
From the above example, its clear what is the problem.&lt;/p&gt;

&lt;p&gt;So, how to overcome this ?
Good question, there is an easy solution.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div ng-repeat=&amp;quot;log in logs&amp;quot;&amp;gt;
    &amp;lt;span class=&amp;quot;remove&amp;quot; ng-click=&amp;quot;remove(log)&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;

$scope.remove = function(log) {
    // Code for removing log
    var index = $scope.logs.indexOf(log);
    remove($scope.logs[index]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instead of passing $index into the function, pass the object itself and use &lt;code&gt;indexOf&lt;/code&gt; to get the index, which returns
index 1 for &lt;strong&gt;log2&lt;/strong&gt;, since indexOf &lt;strong&gt;log2&lt;/strong&gt; in original logs is 1.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add a custom titlebar to your nw.js app</title>
      <link>http://dineshs91.github.io/blog/post/custom_titlebar/</link>
      <pubDate>Thu, 24 Sep 2015 09:14:08 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/custom_titlebar/</guid>
      <description>&lt;p&gt;In this post, I am going to show you how to create a custom titlebar for your nw.js app. If you haven&amp;rsquo;t heard of nw.js, check it out
&lt;a href=&#34;https://github.com/nwjs/nw.js&#34;&gt;here&lt;/a&gt;. It enables a new way of writing desktop applications with all web technologies.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s answer a simple question. &lt;strong&gt;Why do we need a custom titlebar ?&lt;/strong&gt; Because it&amp;rsquo;s better than the default one and it looks
the &lt;strong&gt;same across different platforms&lt;/strong&gt;. Default titlebar looks different, on different operating systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Devlog with custom titlebar&lt;/strong&gt;
&lt;img src=&#34;http://dineshs91.github.io/blog/images/custom_titlebar/custom titlebar.png&#34; alt=&#34;custom titlebar&#34; /&gt;
&lt;strong&gt;And with default one.&lt;/strong&gt;
&lt;img src=&#34;http://dineshs91.github.io/blog/images/custom_titlebar/default titlebar.png&#34; alt=&#34;default titlebar&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Custom titlebar looks cool right ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let&amp;rsquo;s get started.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The first thing we do is, we disable the default titlebar.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;window&amp;quot;: {
  &amp;quot;toolbar&amp;quot;: false,
  &amp;quot;frame&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To do that, make the &lt;strong&gt;frame&lt;/strong&gt; and &lt;strong&gt;toolbar&lt;/strong&gt; name false in package.json. This will remove the frame, and now the window becomes
frameless.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After the first step, we will notice that the window is frameless now and we will not be able to drag the
application anymore.&lt;/p&gt;

&lt;p&gt;To make the whole window draggable, add style &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; to body tag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body style=&amp;quot;-webkit-app-region: drag&amp;quot;&amp;gt;
    ...
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or we can make a particular region draggable, by adding style &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; to that element.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;titlebar&amp;quot; style=&amp;quot;-webkit-app-region: drag&amp;quot;&amp;gt;
    ...
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, our application is draggable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Next thing, we add the window buttons (close, minimize and maximize)&lt;/p&gt;

&lt;p&gt;For buttons, I&amp;rsquo;ve used semantic-ui &lt;a href=&#34;http://semantic-ui.com/elements/label.html#circular&#34;&gt;labels&lt;/a&gt; for devlog.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OS X style buttons&lt;/strong&gt;
&lt;img src=&#34;http://dineshs91.github.io/blog/images/custom_titlebar/window buttons.png&#34; alt=&#34;Alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Though it&amp;rsquo;s not perfect, it does the job well.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;rsquo;s it, we have successfully created a custom titlebar for our nw.js application. Go ahead and create awesome titlebars for your apps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A little about myself</title>
      <link>http://dineshs91.github.io/blog/post/myself/</link>
      <pubDate>Sun, 09 Aug 2015 21:48:45 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/myself/</guid>
      <description>&lt;p&gt;I am a self taught programmer. It started out as a journey to explore the world of computers, the digital world. I started off with the fundamentals. I can say that my entire learning was a fruit of all the questions I’ve asked myself. Questions, &lt;strong&gt;&lt;em&gt;Like how internet works ?&lt;/em&gt;&lt;/strong&gt; I started programming just to answer this question &lt;strong&gt;&lt;em&gt;“How does a c program make a computer do some work?”&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every moment is a learning opportunity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In schools and colleges they’ve always taught us how to write c program in an editor, then compile and run. But I wasn’t able to connect the dots. How could this be making a computer work? I used to think. I found the answer to this. It was &lt;a href=&#34;https://en.wikipedia.org/wiki/Borland_Turbo_C&#34;&gt;Turbo C&lt;/a&gt;, which by providing user friendliness was hiding something. Only after I used &lt;a href=&#34;https://gcc.gnu.org/&#34;&gt;gcc&lt;/a&gt;, I understood the process. There can be two sides, one is user friendliness and the other is transparency. Take the example of windows and linux, windows is user friendly but hides a lot about what’s happening inside. But linux is very transparent in terms of what is happening. You can see the code for yourself. This is one of the reason’s that made me believe “ok C program can make computer do things”. I never said no to anything related to computer after that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The positive and negative with computer is they do what we program them to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I started with GUI programming in &lt;a href=&#34;http://www.gtk.org/&#34;&gt;GTK&lt;/a&gt;. No wonder I started with GUI, as I was a windows user back then. After a couple of months I replaced windows with ubuntu. Using linux was very different. It gave me the feeling of a hacker. Typing commands in console, I felt like, I was actually interacting with the computer. Suddenly I felt empowered. I started learning about networking. Wireshark, tcpdump, airmon-ng using these tools I got to know what happens behind the scene. So I learnt some things about networking, which previously, I took for granted.
One day when I was using this tool &lt;a href=&#34;http://www.secdev.org/projects/scapy/&#34;&gt;scapy&lt;/a&gt;, I got very much interested in &lt;a href=&#34;https://www.python.org/&#34;&gt;python&lt;/a&gt;. So I started learning it. The name was also very cool. It was very easy to learn. I opened &lt;a href=&#34;https://docs.python.org/2/&#34;&gt;official docs&lt;/a&gt; in browser and in terminal I opened python, and started typing commands. Actually I was programming Interactively. Then I started out with Interview Street. It is a platform where you can solve programming challenges. It was fascinating. Later Interview Street became &lt;a href=&#34;https://www.hackerrank.com/&#34;&gt;Hackerrank&lt;/a&gt;. By solving those challenges, I got better at the way I think. I still solve challenges in Hackerrank. It’s good for my mind.&lt;/p&gt;

&lt;p&gt;Then I got to know about &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;https://github.com/&#34;&gt;github&lt;/a&gt;. It was intriguing, to know how github works. Distributed collaboration using git, remarkable.
Open source is a world that is always special to me.
All I understood was that I can learn things fast.&lt;/p&gt;

&lt;p&gt;My brother was doing MBA in Information security at that time. So I got to know about Nmap, Netcat, snort, nessus, rainbow tables etc. I configured snort in my laptop and also wrote a simple plugin for nessus.&lt;/p&gt;

&lt;p&gt;Programming made me confident, I had gone through one of the toughest times in my life without a lot of pain because of programming.
It was so addictive. I was very much in love with it, so much that I wasn’t thinking of anything else. It made me believe that I can do things.
Actual things that can be useful to others. Above all, it makes me very happy. It changed the way I think. I started to approach things in an efficient way, Thanks to programming.
I am very grateful to the community. I have never seen anything like this before. Great pioneers are part of it.&lt;/p&gt;

&lt;p&gt;That feeling you get when you break barriers, when you achieve something which you thought was impossible, that particular moment, that moment of realisation, that moment of innovation, is the best moment someone could ever have.
By programming I got to experience what that&amp;rsquo;s like. Once you get the taste of it, there&amp;rsquo;s no stopping you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Functional programming in python</title>
      <link>http://dineshs91.github.io/blog/post/functional_programming_python/</link>
      <pubDate>Sun, 28 Jun 2015 16:46:33 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/functional_programming_python/</guid>
      <description>&lt;p&gt;Python offers some good functions to the developers to write functional like code. But their use is not
recommended as it reduces code readability. They may come handy in some places though.&lt;/p&gt;

&lt;p&gt;This is an example program showing the use of functional concepts in python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Given a song, find out if the song is a pi song or not. If it is a pi song print &amp;ldquo;It&amp;rsquo;s a pi song.&amp;rdquo;  else
print &amp;ldquo;It&amp;rsquo;s not a pi song.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;A song is a pi song, if the lenght of the words in it matches the digits of pi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;T = input()

pi = &amp;quot;31415926535897932384626433833&amp;quot;

def calculate(song):
      words = map(lambda x: str(len(x)), song.split(&amp;quot; &amp;quot;))
      p = reduce(lambda a, b: a + b, words)

      if(p == pi[:len(p)]):
          print &amp;quot;It&#39;s a pi song.&amp;quot;
      else:
          print &amp;quot;It&#39;s not a pi song.&amp;quot;


for _ in range(T):
    song = raw_input()
    calculate(song)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This problem is a challenge from hackerrank. I couldn&amp;rsquo;t find a link to the problem in it, I guess the challenge is probably removed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrating to hugo</title>
      <link>http://dineshs91.github.io/blog/post/welcome/</link>
      <pubDate>Sun, 28 Jun 2015 00:09:45 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/welcome/</guid>
      <description>&lt;p&gt;Migrating to hugo based blog. I am super exited to be using hugo, for my blog. The reason
I had to quit tumblr was due to missing syntax highlighting support. Moreover hugo is open
source and that itself is a great motivation for me to try it out. I will be moving all my
blogs to hugo, over the coming weeks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How it all began with devlog</title>
      <link>http://dineshs91.github.io/blog/post/why_devlog/</link>
      <pubDate>Wed, 03 Jun 2015 19:38:22 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/why_devlog/</guid>
      <description>&lt;p&gt;Our &lt;strong&gt;imagination&lt;/strong&gt; is a fantastic machine, which throws at us amazing idea’s. But our educated mind, discards it obviously (It&amp;rsquo;s not practical it says). The best thing to do is, to write down that idea as soon as it comes out, otherwise the evil mind will wipe it off. Next question, where do i write it ? Almost all the existing platforms are online, but i don’t want this idea to be visible to the public (Not yet !). This is something that is very close to us and it should stay that way for sometime, before making a public debut.&lt;/p&gt;

&lt;p&gt;The crazy internet world. No matter, which website we land on, it asks us to login. There are some sites where it is not necessary, but we definitely get the idea behind all of this. &lt;strong&gt;&lt;em&gt;Can we trust these sites ?&lt;/em&gt;&lt;/strong&gt; So the platform should not be an online one. An online platform is not all needed, for this purpose.&lt;/p&gt;

&lt;p&gt;You can ask, why can’t we use a notebook instead of an app. This is a valid suggestion. But i don’t want to waste paper. Notebooks are very close to me. I keep writing everything down. You cannot see me at work, without a notebook/notepad. I wanted that kind of an experience in an application. Giving  something back to the mother earth and to the awesome people.&lt;/p&gt;

&lt;p&gt;The name &lt;strong&gt;Devlog&lt;/strong&gt; is short for developer log. This is a logbook, where you kind of log your daily activites as a developer(Not necessary). You can go look back at your logs and decide what to do. It&amp;rsquo;s designed to assist you in keeping track of your notes and ideas in a simple way.&lt;/p&gt;

&lt;p&gt;Data is our’s and we should own it. It definitely should stay that way until we choose otherwise.&lt;/p&gt;

&lt;p&gt;If you are interested in this idea, please have a look at the &lt;a href=&#34;https://github.com/Dineshs91/devlog&#34;&gt;source&lt;/a&gt; or take it for a spin and let me know your experience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How a programmer feels</title>
      <link>http://dineshs91.github.io/blog/post/programmer_feels/</link>
      <pubDate>Sat, 28 Mar 2015 16:22:58 +0530</pubDate>
      
      <guid>http://dineshs91.github.io/blog/post/programmer_feels/</guid>
      <description>&lt;p&gt;There is a very good quality, every amazing programmer has. It’s their love towards programming or the whole technology, surrounding computers.&lt;/p&gt;

&lt;p&gt;Being a programmer myself, I have come across situations, where it was very frustrating to debug. It may take days, even weeks to find the issue. But we never give up. It’s like a battle between bug and the programmer. And you know what, we have this ego, there is nothing we can’t accomplish. Something like this, goes in our minds &lt;strong&gt;&lt;em&gt;“Bug, you can’t hide from me for long. I am gonna get you soon”&lt;/em&gt;&lt;/strong&gt;. Its the challenge, that makes it more fun and interesting. The degree of difficulty, is proportional to the degree of awesomeness, we feel solving it.&lt;/p&gt;

&lt;p&gt;Finally finding the bug, is like finding a mythical creature. &lt;strong&gt;&lt;em&gt;‘Here you are, got you’&lt;/em&gt;&lt;/strong&gt;. That particular moment of realisation, is incredible.&lt;/p&gt;

&lt;p&gt;Ok 1 down, 5 to go….&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>